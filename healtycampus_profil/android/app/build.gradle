plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace = "com.healthy_campus"
    compileSdk = 35
    ndkVersion = "27.0.12077973"

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    bundle {
        language {
            enableSplit = true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.healthy_campus"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion 23
        targetSdkVersion 34
        multiDexEnabled true
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            shrinkResources false
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled true  // Enable code shrinking
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    
    lint {
        warning 'deprecation'
        warningsAsErrors true
        checkReleaseBuilds true
        abortOnError true
        baseline = file("lint-baseline.xml")
    }
    
    packaging {
        jniLibs {
            useLegacyPackaging true
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.google.android.play:feature-delivery:2.1.0'
    implementation 'com.google.android.play:feature-delivery-ktx:2.1.0'
    implementation 'com.google.android.play:review:2.0.2'
    implementation 'com.google.android.play:review-ktx:2.0.2'
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'
    implementation 'com.google.android.gms:play-services-tasks:18.2.1'
    implementation 'com.google.android.gms:play-services-basement:18.6.0'
    implementation 'androidx.activity:activity:1.10.1'
    implementation 'androidx.activity:activity-ktx:1.10.1'
    implementation 'com.google.android.play:integrity:1.4.0'
    implementation 'com.scottyab:rootbeer-lib:0.1.1'
}

